{"@t":"2017-05-20T20:10:34.5371300Z","@m":"Request starting HTTP/1.1 GET http://localhost:5000/  ","@i":"e5be5b71","Protocol":"HTTP/1.1","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"http","Host":"localhost:5000","PathBase":"","Path":"/","QueryString":"","HostingRequestStarting":"Request starting HTTP/1.1 GET http://localhost:5000/  ","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HL4VNH326HPL","RequestPath":"/"}
{"@t":"2017-05-20T20:10:34.9322990Z","@m":"Request finished in 440.1353ms 404 ","@i":"15c52c40","ElapsedMilliseconds":440.13530000000003,"StatusCode":404,"ContentType":null,"HostingRequestFinished":"Request finished in 440.1353ms 404 ","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HL4VNH326HPL","RequestPath":"/"}
{"@t":"2017-05-20T20:10:40.9065490Z","@m":"Request starting HTTP/1.1 GET http://localhost:5000/api/values  ","@i":"e5be5b71","Protocol":"HTTP/1.1","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"http","Host":"localhost:5000","PathBase":"","Path":"/api/values","QueryString":"","HostingRequestStarting":"Request starting HTTP/1.1 GET http://localhost:5000/api/values  ","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HL4VNH326HPM","RequestPath":"/api/values"}
{"@t":"2017-05-20T20:10:41.0256490Z","@m":"Executing action method \"WebApi_AWS_Starter.Controllers.ValuesController.Get (WebApi_AWS_Starter)\" with arguments (null) - ModelState is Valid","@i":"ba7f4ac2","ActionName":"WebApi_AWS_Starter.Controllers.ValuesController.Get (WebApi_AWS_Starter)","Arguments":null,"ValidationState":"Valid","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker","ActionId":"d6a31324-9b36-4286-9345-02136df539e0","RequestId":"0HL4VNH326HPM","RequestPath":"/api/values"}
{"@t":"2017-05-20T20:10:41.5354890Z","@m":"Executed action \"WebApi_AWS_Starter.Controllers.ValuesController.Get (WebApi_AWS_Starter)\" in 577.2528ms","@i":"afa2e885","ActionName":"WebApi_AWS_Starter.Controllers.ValuesController.Get (WebApi_AWS_Starter)","ElapsedMilliseconds":577.2528,"EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker","ActionId":"d6a31324-9b36-4286-9345-02136df539e0","RequestId":"0HL4VNH326HPM","RequestPath":"/api/values"}
{"@t":"2017-05-20T20:10:41.6850490Z","@m":"Connection id \"\"0HL4VNH30G5GJ\"\": An unhandled exception was thrown by the application.","@i":"8c14976b","@l":"Error","@x":"System.AggregateException: One or more errors occurred. (This platform does not support connecting sockets to DNS endpoints via the instance Connect and ConnectAsync methods, due to the potential for a host name to map to multiple IP addresses and sockets becoming invalid for use after a failed connect attempt. Use the static ConnectAsync method, or provide to the instance methods the specific IPAddress desired.) ---> System.PlatformNotSupportedException: This platform does not support connecting sockets to DNS endpoints via the instance Connect and ConnectAsync methods, due to the potential for a host name to map to multiple IP addresses and sockets becoming invalid for use after a failed connect attempt. Use the static ConnectAsync method, or provide to the instance methods the specific IPAddress desired.\n   at System.Net.Sockets.Socket.ThrowIfNotSupportsMultipleConnectAttempts()\n   at System.Net.Sockets.Socket.BeginConnect(String host, Int32 port, AsyncCallback requestCallback, Object state)\n   at System.Net.Sockets.SocketTaskExtensions.<>c.<ConnectAsync>b__5_0(String targetHost, Int32 targetPort, AsyncCallback callback, Object state)\n   at System.Threading.Tasks.TaskFactory`1.FromAsyncImpl[TArg1,TArg2](Func`5 beginMethod, Func`2 endFunction, Action`1 endAction, TArg1 arg1, TArg2 arg2, Object state, TaskCreationOptions creationOptions)\n   at System.Threading.Tasks.TaskFactory.FromAsync[TArg1,TArg2](Func`5 beginMethod, Action`1 endMethod, TArg1 arg1, TArg2 arg2, Object state)\n   at System.Net.Sockets.SocketTaskExtensions.ConnectAsync(Socket socket, String host, Int32 port)\n   at StackExchange.Redis.SocketManager.BeginConnect(EndPoint endpoint, ISocketCallback callback, ConnectionMultiplexer multiplexer, TextWriter log)\n   at StackExchange.Redis.PhysicalConnection.BeginConnect(TextWriter log)\n   at StackExchange.Redis.PhysicalBridge.GetConnection(TextWriter log)\n   at StackExchange.Redis.ServerEndPoint..ctor(ConnectionMultiplexer multiplexer, EndPoint endpoint, TextWriter log)\n   at StackExchange.Redis.ConnectionMultiplexer.<ReconfigureAsync>d__119.MoveNext()\n   --- End of inner exception stack trace ---\n   at System.Threading.Tasks.Task.ThrowIfExceptional(Boolean includeTaskCanceledExceptions)\n   at System.Threading.Tasks.Task.Wait(Int32 millisecondsTimeout, CancellationToken cancellationToken)\n   at StackExchange.Redis.ConnectionMultiplexer.ConnectImpl(Func`1 multiplexerFactory, TextWriter log)\n   at Microsoft.Extensions.Caching.Redis.RedisCache.Connect()\n   at Microsoft.Extensions.Caching.Redis.RedisCache.GetAndRefresh(String key, Boolean getData)\n   at Microsoft.Extensions.Caching.Distributed.DistributedCacheExtensions.GetString(IDistributedCache cache, String key)\n   at WebApi_AWS_Starter.Controllers.ValuesController.<Get>d__3.MoveNext() in /Users/ritwikroy/Projects/WebApi_AWS_Starter/Controllers/ValuesController.cs:line 26\n--- End of stack trace from previous location where exception was thrown ---\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\n   at Microsoft.AspNetCore.Mvc.Internal.ObjectMethodExecutor.<CastToObject>d__40`1.MoveNext()\n--- End of stack trace from previous location where exception was thrown ---\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\n   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.<InvokeActionMethodAsync>d__27.MoveNext()\n--- End of stack trace from previous location where exception was thrown ---\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\n   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.<InvokeNextActionFilterAsync>d__25.MoveNext()\n--- End of stack trace from previous location where exception was thrown ---\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\n   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Rethrow(ActionExecutedContext context)\n   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\n   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.<InvokeNextResourceFilter>d__22.MoveNext()\n--- End of stack trace from previous location where exception was thrown ---\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\n   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Rethrow(ResourceExecutedContext context)\n   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\n   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.<InvokeAsync>d__20.MoveNext()\n--- End of stack trace from previous location where exception was thrown ---\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\n   at Microsoft.AspNetCore.Builder.RouterMiddleware.<Invoke>d__4.MoveNext()\n--- End of stack trace from previous location where exception was thrown ---\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\n   at Microsoft.AspNetCore.Hosting.Internal.RequestServicesContainerMiddleware.<Invoke>d__3.MoveNext()\n--- End of stack trace from previous location where exception was thrown ---\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\n   at Microsoft.AspNetCore.Server.Kestrel.Internal.Http.Frame`1.<RequestProcessingAsync>d__2.MoveNext()\n---> (Inner Exception #0) System.PlatformNotSupportedException: This platform does not support connecting sockets to DNS endpoints via the instance Connect and ConnectAsync methods, due to the potential for a host name to map to multiple IP addresses and sockets becoming invalid for use after a failed connect attempt. Use the static ConnectAsync method, or provide to the instance methods the specific IPAddress desired.\n   at System.Net.Sockets.Socket.ThrowIfNotSupportsMultipleConnectAttempts()\n   at System.Net.Sockets.Socket.BeginConnect(String host, Int32 port, AsyncCallback requestCallback, Object state)\n   at System.Net.Sockets.SocketTaskExtensions.<>c.<ConnectAsync>b__5_0(String targetHost, Int32 targetPort, AsyncCallback callback, Object state)\n   at System.Threading.Tasks.TaskFactory`1.FromAsyncImpl[TArg1,TArg2](Func`5 beginMethod, Func`2 endFunction, Action`1 endAction, TArg1 arg1, TArg2 arg2, Object state, TaskCreationOptions creationOptions)\n   at System.Threading.Tasks.TaskFactory.FromAsync[TArg1,TArg2](Func`5 beginMethod, Action`1 endMethod, TArg1 arg1, TArg2 arg2, Object state)\n   at System.Net.Sockets.SocketTaskExtensions.ConnectAsync(Socket socket, String host, Int32 port)\n   at StackExchange.Redis.SocketManager.BeginConnect(EndPoint endpoint, ISocketCallback callback, ConnectionMultiplexer multiplexer, TextWriter log)\n   at StackExchange.Redis.PhysicalConnection.BeginConnect(TextWriter log)\n   at StackExchange.Redis.PhysicalBridge.GetConnection(TextWriter log)\n   at StackExchange.Redis.ServerEndPoint..ctor(ConnectionMultiplexer multiplexer, EndPoint endpoint, TextWriter log)\n   at StackExchange.Redis.ConnectionMultiplexer.<ReconfigureAsync>d__119.MoveNext()<---\n","ConnectionId":"0HL4VNH30G5GJ","EventId":{"Id":13},"SourceContext":"Microsoft.AspNetCore.Server.Kestrel","RequestId":"0HL4VNH326HPM","RequestPath":"/api/values"}
{"@t":"2017-05-20T20:10:41.6904910Z","@m":"Request finished in 783.3753ms 500 ","@i":"15c52c40","ElapsedMilliseconds":783.3753,"StatusCode":500,"ContentType":null,"HostingRequestFinished":"Request finished in 783.3753ms 500 ","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HL4VNH326HPM","RequestPath":"/api/values"}
{"@t":"2017-05-20T20:11:06.5578800Z","@m":"Request starting HTTP/1.1 GET http://localhost:5000/api/values  ","@i":"e5be5b71","Protocol":"HTTP/1.1","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"http","Host":"localhost:5000","PathBase":"","Path":"/api/values","QueryString":"","HostingRequestStarting":"Request starting HTTP/1.1 GET http://localhost:5000/api/values  ","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HL4VNH326HPN","RequestPath":"/api/values"}
{"@t":"2017-05-20T20:11:06.5631850Z","@m":"Executing action method \"WebApi_AWS_Starter.Controllers.ValuesController.Get (WebApi_AWS_Starter)\" with arguments (null) - ModelState is Valid","@i":"ba7f4ac2","ActionName":"WebApi_AWS_Starter.Controllers.ValuesController.Get (WebApi_AWS_Starter)","Arguments":null,"ValidationState":"Valid","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker","ActionId":"d6a31324-9b36-4286-9345-02136df539e0","RequestId":"0HL4VNH326HPN","RequestPath":"/api/values"}
{"@t":"2017-05-20T20:11:15.1219750Z","@m":"Executed action \"WebApi_AWS_Starter.Controllers.ValuesController.Get (WebApi_AWS_Starter)\" in 8559.2051ms","@i":"afa2e885","ActionName":"WebApi_AWS_Starter.Controllers.ValuesController.Get (WebApi_AWS_Starter)","ElapsedMilliseconds":8559.205100000001,"EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker","ActionId":"d6a31324-9b36-4286-9345-02136df539e0","RequestId":"0HL4VNH326HPN","RequestPath":"/api/values"}
{"@t":"2017-05-20T20:11:15.1357360Z","@m":"Connection id \"\"0HL4VNH30G5GJ\"\": An unhandled exception was thrown by the application.","@i":"8c14976b","@l":"Error","@x":"System.AggregateException: One or more errors occurred. (This platform does not support connecting sockets to DNS endpoints via the instance Connect and ConnectAsync methods, due to the potential for a host name to map to multiple IP addresses and sockets becoming invalid for use after a failed connect attempt. Use the static ConnectAsync method, or provide to the instance methods the specific IPAddress desired.) ---> System.PlatformNotSupportedException: This platform does not support connecting sockets to DNS endpoints via the instance Connect and ConnectAsync methods, due to the potential for a host name to map to multiple IP addresses and sockets becoming invalid for use after a failed connect attempt. Use the static ConnectAsync method, or provide to the instance methods the specific IPAddress desired.\n   at System.Net.Sockets.Socket.ThrowIfNotSupportsMultipleConnectAttempts()\n   at System.Net.Sockets.Socket.BeginConnect(String host, Int32 port, AsyncCallback requestCallback, Object state)\n   at System.Net.Sockets.SocketTaskExtensions.<>c.<ConnectAsync>b__5_0(String targetHost, Int32 targetPort, AsyncCallback callback, Object state)\n   at System.Threading.Tasks.TaskFactory`1.FromAsyncImpl[TArg1,TArg2](Func`5 beginMethod, Func`2 endFunction, Action`1 endAction, TArg1 arg1, TArg2 arg2, Object state, TaskCreationOptions creationOptions)\n   at System.Threading.Tasks.TaskFactory.FromAsync[TArg1,TArg2](Func`5 beginMethod, Action`1 endMethod, TArg1 arg1, TArg2 arg2, Object state)\n   at System.Net.Sockets.SocketTaskExtensions.ConnectAsync(Socket socket, String host, Int32 port)\n   at StackExchange.Redis.SocketManager.BeginConnect(EndPoint endpoint, ISocketCallback callback, ConnectionMultiplexer multiplexer, TextWriter log)\n   at StackExchange.Redis.PhysicalConnection.BeginConnect(TextWriter log)\n   at StackExchange.Redis.PhysicalBridge.GetConnection(TextWriter log)\n   at StackExchange.Redis.ServerEndPoint..ctor(ConnectionMultiplexer multiplexer, EndPoint endpoint, TextWriter log)\n   at StackExchange.Redis.ConnectionMultiplexer.<ReconfigureAsync>d__119.MoveNext()\n   --- End of inner exception stack trace ---\n   at System.Threading.Tasks.Task.ThrowIfExceptional(Boolean includeTaskCanceledExceptions)\n   at System.Threading.Tasks.Task.Wait(Int32 millisecondsTimeout, CancellationToken cancellationToken)\n   at StackExchange.Redis.ConnectionMultiplexer.ConnectImpl(Func`1 multiplexerFactory, TextWriter log)\n   at Microsoft.Extensions.Caching.Redis.RedisCache.Connect()\n   at Microsoft.Extensions.Caching.Redis.RedisCache.GetAndRefresh(String key, Boolean getData)\n   at Microsoft.Extensions.Caching.Distributed.DistributedCacheExtensions.GetString(IDistributedCache cache, String key)\n   at WebApi_AWS_Starter.Controllers.ValuesController.<Get>d__3.MoveNext() in /Users/ritwikroy/Projects/WebApi_AWS_Starter/Controllers/ValuesController.cs:line 26\n--- End of stack trace from previous location where exception was thrown ---\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\n   at Microsoft.AspNetCore.Mvc.Internal.ObjectMethodExecutor.<CastToObject>d__40`1.MoveNext()\n--- End of stack trace from previous location where exception was thrown ---\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\n   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.<InvokeActionMethodAsync>d__27.MoveNext()\n--- End of stack trace from previous location where exception was thrown ---\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\n   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.<InvokeNextActionFilterAsync>d__25.MoveNext()\n--- End of stack trace from previous location where exception was thrown ---\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\n   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Rethrow(ActionExecutedContext context)\n   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\n   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.<InvokeNextResourceFilter>d__22.MoveNext()\n--- End of stack trace from previous location where exception was thrown ---\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\n   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Rethrow(ResourceExecutedContext context)\n   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\n   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.<InvokeAsync>d__20.MoveNext()\n--- End of stack trace from previous location where exception was thrown ---\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\n   at Microsoft.AspNetCore.Builder.RouterMiddleware.<Invoke>d__4.MoveNext()\n--- End of stack trace from previous location where exception was thrown ---\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\n   at Microsoft.AspNetCore.Hosting.Internal.RequestServicesContainerMiddleware.<Invoke>d__3.MoveNext()\n--- End of stack trace from previous location where exception was thrown ---\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\n   at Microsoft.AspNetCore.Server.Kestrel.Internal.Http.Frame`1.<RequestProcessingAsync>d__2.MoveNext()\n---> (Inner Exception #0) System.PlatformNotSupportedException: This platform does not support connecting sockets to DNS endpoints via the instance Connect and ConnectAsync methods, due to the potential for a host name to map to multiple IP addresses and sockets becoming invalid for use after a failed connect attempt. Use the static ConnectAsync method, or provide to the instance methods the specific IPAddress desired.\n   at System.Net.Sockets.Socket.ThrowIfNotSupportsMultipleConnectAttempts()\n   at System.Net.Sockets.Socket.BeginConnect(String host, Int32 port, AsyncCallback requestCallback, Object state)\n   at System.Net.Sockets.SocketTaskExtensions.<>c.<ConnectAsync>b__5_0(String targetHost, Int32 targetPort, AsyncCallback callback, Object state)\n   at System.Threading.Tasks.TaskFactory`1.FromAsyncImpl[TArg1,TArg2](Func`5 beginMethod, Func`2 endFunction, Action`1 endAction, TArg1 arg1, TArg2 arg2, Object state, TaskCreationOptions creationOptions)\n   at System.Threading.Tasks.TaskFactory.FromAsync[TArg1,TArg2](Func`5 beginMethod, Action`1 endMethod, TArg1 arg1, TArg2 arg2, Object state)\n   at System.Net.Sockets.SocketTaskExtensions.ConnectAsync(Socket socket, String host, Int32 port)\n   at StackExchange.Redis.SocketManager.BeginConnect(EndPoint endpoint, ISocketCallback callback, ConnectionMultiplexer multiplexer, TextWriter log)\n   at StackExchange.Redis.PhysicalConnection.BeginConnect(TextWriter log)\n   at StackExchange.Redis.PhysicalBridge.GetConnection(TextWriter log)\n   at StackExchange.Redis.ServerEndPoint..ctor(ConnectionMultiplexer multiplexer, EndPoint endpoint, TextWriter log)\n   at StackExchange.Redis.ConnectionMultiplexer.<ReconfigureAsync>d__119.MoveNext()<---\n","ConnectionId":"0HL4VNH30G5GJ","EventId":{"Id":13},"SourceContext":"Microsoft.AspNetCore.Server.Kestrel","RequestId":"0HL4VNH326HPN","RequestPath":"/api/values"}
{"@t":"2017-05-20T20:11:15.1588450Z","@m":"Request finished in 8582.5139ms 500 ","@i":"15c52c40","ElapsedMilliseconds":8582.5139,"StatusCode":500,"ContentType":null,"HostingRequestFinished":"Request finished in 8582.5139ms 500 ","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HL4VNH326HPN","RequestPath":"/api/values"}
{"@t":"2017-05-20T20:44:57.7303360Z","@m":"Request starting HTTP/1.1 GET http://localhost:5000/  ","@i":"e5be5b71","Protocol":"HTTP/1.1","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"http","Host":"localhost:5000","PathBase":"","Path":"/","QueryString":"","HostingRequestStarting":"Request starting HTTP/1.1 GET http://localhost:5000/  ","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HL4VO49UAR79","RequestPath":"/"}
{"@t":"2017-05-20T20:44:58.1324330Z","@m":"Request finished in 450.3148ms 404 ","@i":"15c52c40","ElapsedMilliseconds":450.31480000000005,"StatusCode":404,"ContentType":null,"HostingRequestFinished":"Request finished in 450.3148ms 404 ","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HL4VO49UAR79","RequestPath":"/"}
{"@t":"2017-05-20T20:45:04.8954180Z","@m":"Request starting HTTP/1.1 GET http://localhost:5000/api/values  ","@i":"e5be5b71","Protocol":"HTTP/1.1","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"http","Host":"localhost:5000","PathBase":"","Path":"/api/values","QueryString":"","HostingRequestStarting":"Request starting HTTP/1.1 GET http://localhost:5000/api/values  ","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HL4VO49UAR7A","RequestPath":"/api/values"}
{"@t":"2017-05-20T20:45:05.0195880Z","@m":"Executing action method \"WebApi_AWS_Starter.Controllers.ValuesController.Get (WebApi_AWS_Starter)\" with arguments (null) - ModelState is Valid","@i":"ba7f4ac2","ActionName":"WebApi_AWS_Starter.Controllers.ValuesController.Get (WebApi_AWS_Starter)","Arguments":null,"ValidationState":"Valid","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker","ActionId":"448fd3d0-0627-43c9-9c31-158d2ce17f5f","RequestId":"0HL4VO49UAR7A","RequestPath":"/api/values"}
{"@t":"2017-05-20T20:45:23.6391120Z","@m":"Executing ObjectResult, writing value \"Microsoft.AspNetCore.Mvc.ControllerContext\".","@i":"4e968210","Value":"Microsoft.AspNetCore.Mvc.ControllerContext","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Mvc.Internal.ObjectResultExecutor","ActionId":"448fd3d0-0627-43c9-9c31-158d2ce17f5f","ActionName":"WebApi_AWS_Starter.Controllers.ValuesController.Get (WebApi_AWS_Starter)","RequestId":"0HL4VO49UAR7A","RequestPath":"/api/values"}
{"@t":"2017-05-20T20:45:23.6736710Z","@m":"Executed action \"WebApi_AWS_Starter.Controllers.ValuesController.Get (WebApi_AWS_Starter)\" in 18723.9172ms","@i":"afa2e885","ActionName":"WebApi_AWS_Starter.Controllers.ValuesController.Get (WebApi_AWS_Starter)","ElapsedMilliseconds":18723.9172,"EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker","ActionId":"448fd3d0-0627-43c9-9c31-158d2ce17f5f","RequestId":"0HL4VO49UAR7A","RequestPath":"/api/values"}
{"@t":"2017-05-20T20:45:23.6813060Z","@m":"Request finished in 18786.0738ms 200 text/plain; charset=utf-8","@i":"15c52c40","ElapsedMilliseconds":18786.073800000002,"StatusCode":200,"ContentType":"text/plain; charset=utf-8","HostingRequestFinished":"Request finished in 18786.0738ms 200 text/plain; charset=utf-8","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HL4VO49UAR7A","RequestPath":"/api/values"}
{"@t":"2017-05-20T20:46:11.9730640Z","@m":"Request starting HTTP/1.1 GET http://localhost:5000/api/values  ","@i":"e5be5b71","Protocol":"HTTP/1.1","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"http","Host":"localhost:5000","PathBase":"","Path":"/api/values","QueryString":"","HostingRequestStarting":"Request starting HTTP/1.1 GET http://localhost:5000/api/values  ","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HL4VO49UAR7B","RequestPath":"/api/values"}
{"@t":"2017-05-20T20:46:11.9785630Z","@m":"Executing action method \"WebApi_AWS_Starter.Controllers.ValuesController.Get (WebApi_AWS_Starter)\" with arguments (null) - ModelState is Valid","@i":"ba7f4ac2","ActionName":"WebApi_AWS_Starter.Controllers.ValuesController.Get (WebApi_AWS_Starter)","Arguments":null,"ValidationState":"Valid","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker","ActionId":"448fd3d0-0627-43c9-9c31-158d2ce17f5f","RequestId":"0HL4VO49UAR7B","RequestPath":"/api/values"}
{"@t":"2017-05-20T20:46:21.5786920Z","@m":"Executing ObjectResult, writing value \"Microsoft.AspNetCore.Mvc.ControllerContext\".","@i":"4e968210","Value":"Microsoft.AspNetCore.Mvc.ControllerContext","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Mvc.Internal.ObjectResultExecutor","ActionId":"448fd3d0-0627-43c9-9c31-158d2ce17f5f","ActionName":"WebApi_AWS_Starter.Controllers.ValuesController.Get (WebApi_AWS_Starter)","RequestId":"0HL4VO49UAR7B","RequestPath":"/api/values"}
{"@t":"2017-05-20T20:46:21.5826000Z","@m":"Executed action \"WebApi_AWS_Starter.Controllers.ValuesController.Get (WebApi_AWS_Starter)\" in 9605.1712ms","@i":"afa2e885","ActionName":"WebApi_AWS_Starter.Controllers.ValuesController.Get (WebApi_AWS_Starter)","ElapsedMilliseconds":9605.1712,"EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker","ActionId":"448fd3d0-0627-43c9-9c31-158d2ce17f5f","RequestId":"0HL4VO49UAR7B","RequestPath":"/api/values"}
{"@t":"2017-05-20T20:46:21.6059470Z","@m":"Request finished in 9614.1841ms 200 text/plain; charset=utf-8","@i":"15c52c40","ElapsedMilliseconds":9614.1841,"StatusCode":200,"ContentType":"text/plain; charset=utf-8","HostingRequestFinished":"Request finished in 9614.1841ms 200 text/plain; charset=utf-8","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HL4VO49UAR7B","RequestPath":"/api/values"}
{"@t":"2017-05-20T20:47:07.2148660Z","@m":"Request starting HTTP/1.1 GET http://localhost:5000/api/values  ","@i":"e5be5b71","Protocol":"HTTP/1.1","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"http","Host":"localhost:5000","PathBase":"","Path":"/api/values","QueryString":"","HostingRequestStarting":"Request starting HTTP/1.1 GET http://localhost:5000/api/values  ","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HL4VO49UAR7C","RequestPath":"/api/values"}
{"@t":"2017-05-20T20:47:13.9340340Z","@m":"Executing action method \"WebApi_AWS_Starter.Controllers.ValuesController.Get (WebApi_AWS_Starter)\" with arguments (null) - ModelState is Valid","@i":"ba7f4ac2","ActionName":"WebApi_AWS_Starter.Controllers.ValuesController.Get (WebApi_AWS_Starter)","Arguments":null,"ValidationState":"Valid","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker","ActionId":"448fd3d0-0627-43c9-9c31-158d2ce17f5f","RequestId":"0HL4VO49UAR7C","RequestPath":"/api/values"}
{"@t":"2017-05-20T20:47:14.0319470Z","@m":"Executing ObjectResult, writing value \"Microsoft.AspNetCore.Mvc.ControllerContext\".","@i":"4e968210","Value":"Microsoft.AspNetCore.Mvc.ControllerContext","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Mvc.Internal.ObjectResultExecutor","ActionId":"448fd3d0-0627-43c9-9c31-158d2ce17f5f","ActionName":"WebApi_AWS_Starter.Controllers.ValuesController.Get (WebApi_AWS_Starter)","RequestId":"0HL4VO49UAR7C","RequestPath":"/api/values"}
{"@t":"2017-05-20T20:47:14.0366030Z","@m":"Executed action \"WebApi_AWS_Starter.Controllers.ValuesController.Get (WebApi_AWS_Starter)\" in 6817.3916ms","@i":"afa2e885","ActionName":"WebApi_AWS_Starter.Controllers.ValuesController.Get (WebApi_AWS_Starter)","ElapsedMilliseconds":6817.3916,"EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker","ActionId":"448fd3d0-0627-43c9-9c31-158d2ce17f5f","RequestId":"0HL4VO49UAR7C","RequestPath":"/api/values"}
{"@t":"2017-05-20T20:47:14.0612590Z","@m":"Request finished in 6826.3288ms 200 text/plain; charset=utf-8","@i":"15c52c40","ElapsedMilliseconds":6826.3288,"StatusCode":200,"ContentType":"text/plain; charset=utf-8","HostingRequestFinished":"Request finished in 6826.3288ms 200 text/plain; charset=utf-8","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HL4VO49UAR7C","RequestPath":"/api/values"}
{"@t":"2017-05-20T20:47:55.9098910Z","@m":"Request starting HTTP/1.1 GET http://localhost:5000/  ","@i":"e5be5b71","Protocol":"HTTP/1.1","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"http","Host":"localhost:5000","PathBase":"","Path":"/","QueryString":"","HostingRequestStarting":"Request starting HTTP/1.1 GET http://localhost:5000/  ","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HL4VO5V1ITO9","RequestPath":"/"}
{"@t":"2017-05-20T20:47:56.2608900Z","@m":"Request finished in 396.0539ms 404 ","@i":"15c52c40","ElapsedMilliseconds":396.0539,"StatusCode":404,"ContentType":null,"HostingRequestFinished":"Request finished in 396.0539ms 404 ","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HL4VO5V1ITO9","RequestPath":"/"}
{"@t":"2017-05-20T20:48:01.6610470Z","@m":"Request starting HTTP/1.1 GET http://localhost:5000/api/values  ","@i":"e5be5b71","Protocol":"HTTP/1.1","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"http","Host":"localhost:5000","PathBase":"","Path":"/api/values","QueryString":"","HostingRequestStarting":"Request starting HTTP/1.1 GET http://localhost:5000/api/values  ","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HL4VO5V1ITOA","RequestPath":"/api/values"}
{"@t":"2017-05-20T20:48:01.7761400Z","@m":"Executing action method \"WebApi_AWS_Starter.Controllers.ValuesController.Get (WebApi_AWS_Starter)\" with arguments (null) - ModelState is Valid","@i":"ba7f4ac2","ActionName":"WebApi_AWS_Starter.Controllers.ValuesController.Get (WebApi_AWS_Starter)","Arguments":null,"ValidationState":"Valid","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker","ActionId":"95efa51a-0c6d-47c1-bbd1-b0cc69daf6dc","RequestId":"0HL4VO5V1ITOA","RequestPath":"/api/values"}
{"@t":"2017-05-20T20:48:02.3969940Z","@m":"Executing ObjectResult, writing value \"Microsoft.AspNetCore.Mvc.ControllerContext\".","@i":"4e968210","Value":"Microsoft.AspNetCore.Mvc.ControllerContext","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Mvc.Internal.ObjectResultExecutor","ActionId":"95efa51a-0c6d-47c1-bbd1-b0cc69daf6dc","ActionName":"WebApi_AWS_Starter.Controllers.ValuesController.Get (WebApi_AWS_Starter)","RequestId":"0HL4VO5V1ITOA","RequestPath":"/api/values"}
{"@t":"2017-05-20T20:48:02.4361900Z","@m":"Executed action \"WebApi_AWS_Starter.Controllers.ValuesController.Get (WebApi_AWS_Starter)\" in 723.4539ms","@i":"afa2e885","ActionName":"WebApi_AWS_Starter.Controllers.ValuesController.Get (WebApi_AWS_Starter)","ElapsedMilliseconds":723.45390000000009,"EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker","ActionId":"95efa51a-0c6d-47c1-bbd1-b0cc69daf6dc","RequestId":"0HL4VO5V1ITOA","RequestPath":"/api/values"}
{"@t":"2017-05-20T20:48:02.4437720Z","@m":"Request finished in 782.6715ms 200 text/plain; charset=utf-8","@i":"15c52c40","ElapsedMilliseconds":782.6715,"StatusCode":200,"ContentType":"text/plain; charset=utf-8","HostingRequestFinished":"Request finished in 782.6715ms 200 text/plain; charset=utf-8","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HL4VO5V1ITOA","RequestPath":"/api/values"}
